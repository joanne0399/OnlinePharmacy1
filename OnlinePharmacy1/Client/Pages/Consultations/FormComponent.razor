@inject HttpClient _client

<EditForm Model="@consultation" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Patient: </label>
            <div>
                <InputSelect @bind-Value="consultation.CustomerID" class="form-control">
                    <option value="">-- Select Customer -- </option>
                    @if (Customers != null)
                    {
                        foreach (var customer in Customers)
                        {
                            <option value="@customer.CustomerID">@customer.CustomerName</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() =>consultation.CustomerID)" />
            </div>
        </div>

        <div class="form-group">
            <label>Consultation date/time:</label>
            <div>
                <InputDate @bind-Value="@consultation.ConsultationDateTime" class="form-control" />
                <ValidationMessage For="@(() => consultation.ConsultationDateTime)" />
            </div>
        </div>

        <div class="form-group">
            <label>Diagnosis:</label>
            <div>
                <InputText @bind-Value="@consultation.Diagnosis" class="form-control" />
                <ValidationMessage For="@(() => consultation.Diagnosis)" />
            </div>
        </div>

        <div class="form-group">
            <label>Consulted by: </label>
            <div>
                <InputSelect @bind-Value="consultation.StaffID" class="form-control">
                    <option value="">-- Select Staff -- </option>
                    @if (Staffs != null)
                    {
                        foreach (var staff in Staffs)
                        {
                            <option value="@staff.StaffID">@staff.StaffName</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() =>consultation.StaffID)" />
            </div>
        </div>
    </fieldset>

        @if (!Disabled)
        {
            <button type="submit" class="btn btn-success btn-block">
                @ButtonText
            </button>
        }

        <BackToList Target="consultations" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Consultation consultation { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Customer> Customers;
    private IList<Staff> Staffs;

    protected async override Task OnInitializedAsync()
    {
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"{Endpoints.StaffsEndpoint}");
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
    }

}